/*
 * Clock.cpp
 *
 *  Created on: Feb 9, 2016
 *      Author: bromley
 */

#include "Clock.h"
#include <signal.h>

#include "board_info.h"
#include "ws2811.h"

#define ARRAY_SIZE(stuff) (sizeof(stuff) / sizeof(stuff[0]))

#define TARGET_FREQ WS2811_TARGET_FREQ
#define GPIO_PIN 18
#define DMA 5

#define HEIGHT 60
#define LED_COUNT (HEIGHT)

ws2811_t ledstring = { .freq = TARGET_FREQ, .dmanum = DMA, .channel =
  { [0] = { .gpionum = GPIO_PIN, .count = LED_COUNT, .invert = 0, .brightness = 255, } ,
	[1] = { .gpionum = 0, .count = 0, .invert = 0, .brightness = 0, }, }, };

ws2811_led_t clockArray[HEIGHT];

void render() {
	int i;
	for (i = 0; i < HEIGHT; i++) {
		ledstring.channel[0].leds[i] = clockArray[i];
	}
}


int dotspos[] = { 0, 1, 2, 3, 4, 5, 6, 7 };

ws2811_led_t dotcolors[] = {
		0x000010, // blue
		0x100000, // red
		0x100000,
		0x100000,
		0x100000,
		0x100000,
		0x100000,
		0x001000, // green
		};

void moveUp() {
	int y;
	for (y = 0; y < (HEIGHT - 1); y++) {
		clockArray[y] = clockArray[y + 1];
	}
}

void bottom() {
	static int x = 0;
	clockArray[HEIGHT - 1] = dotcolors[x & 7];
	x++;
}

static void ctrl_c_handler(int signum) {
	ws2811_fini(&ledstring);
}

static void setup_handlers() {
	struct sigaction sa = { .sa_handler = ctrl_c_handler, };
	sigaction(SIGKILL, &sa, NULL);
}

void clear() {
	int i;
	for (i = 0; i < HEIGHT; i++)
		clockArray[i] = 0;
}

void setSecond(int value) {
	clockArray[value] = 0xff0000; // set this pixel to red
}

void advanceSecond() {
	clear();
	int i;
	int status;
	for (i = 0; i < 60; i++) {
		clear();
		setSecond(i);
		render();
		status = ws2811_render(&ledstring);
		uint32_t sleepTime = 500000;
		usleep(sleepTime);
	}
}

void setTime() {
	clear();
	// do stuff
	render();
}

void setHour() {

}

void setMinute() {

}


int main(int argc, char *argv[]) {
	int ret = 0;
	int status = board_info_init();
	if (status < 0) {
		return -1;
	}
	setup_handlers();
	status = ws2811_init(&ledstring);
	if (status) {
		return -1;
	}
	advanceSecond();
	while (1) {
		int times;
		clear();
		for (times = 0; times < HEIGHT; times++) {
			int status;
			moveUp();
			bottom();
			render();
			status = ws2811_render(&ledstring);
			if (status) {
				ret = -1;
				break;
			}
			// 15 frames /sec is sleepTime = 500000
		uint32_t sleepTime = 500000;
		usleep(sleepTime);
		}
	}
	ws2811_fini(&ledstring);
	return ret;
}


